

//We can create a java program to sort array elements using bubble sort. Bubble sort algorithm is known as the simplest sorting

//algorithm.In bubble sort algorithm, array is traversed from first element to last element. Here, current element is compared with the




//next element. If current element is greater than the next element, it is swapped.







public class BubbleSort {



static void bubbleSort(int[] arr) {



int n = arr.length;



int temp = 0;



for(int i=0; i < n; i++){



for(int j=1; j < (n-i); j++){



if(arr[j-1] > arr[j]){



//swap elements 



temp = arr[j-1];



arr[j-1] = arr[j];



arr[j] = temp;



}

}

}

}



public static void main(String[] args) {



int arr[] ={3,60,35,2,45,320,5};



System.out.println("Array Before Bubble Sort");



for(int i=0; i < arr.length; i++){



System.out.print(arr[i] + " ");



}



System.out.println();



bubbleSort(arr);//sorting array elements using bubble sort 



System.out.println("Array After Bubble Sort");



for(int i=0; i < arr.length; i++){



System.out.print(arr[i] + " ");



}



}



}


Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order. This algorithm is not suitable for large data sets.

Algorithm

Compare each pair of adjacent elements from the beginning of an array and, if they are in reversed order, swap them.
If at least one swap has been done, repeat step 1.


We take an unsorted array for our example. 

Bubble sort starts with very first two elements, comparing them to check which one is greater.

In this case, value 60 is greater than 3, so it is already in sorted locations. Next, we compare 60 with 35.



We find that 35 is smaller than 60 and these two values must be swapped.

Then we move to the next two values, 60 and 2.

We know then that 2 is smaller 60. Hence they are not sorted.We swap these values.

Next we swap 60 and 45 because 60 is greater than 45. 

Then we move to next value which is 320 that is greater than 60, so they are sorted and it should not be swapped.

We find that we have reached the end of the array.

And when there's no swap required, bubble sorts learns that an array is completely sorted. 

